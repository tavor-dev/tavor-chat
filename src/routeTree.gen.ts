/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppRouteImport } from './routes/_app'
import { Route as AppLoginRouteImport } from './routes/_app/login'
import { Route as AppAuthRouteImport } from './routes/_app/_auth'
import { Route as AppAuthIndexRouteImport } from './routes/_app/_auth/index'
import { Route as AppAuthSettingsLayoutRouteImport } from './routes/_app/_auth/settings/_layout'
import { Route as AppAuthChatThreadIdRouteImport } from './routes/_app/_auth/chat.$threadId'
import { Route as AppAuthSettingsLayoutIndexRouteImport } from './routes/_app/_auth/settings/_layout.index'

const AppAuthSettingsRouteImport = createFileRoute('/_app/_auth/settings')()

const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const AppLoginRoute = AppLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AppRoute,
} as any)
const AppAuthRoute = AppAuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => AppRoute,
} as any)
const AppAuthSettingsRoute = AppAuthSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppAuthRoute,
} as any)
const AppAuthIndexRoute = AppAuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppAuthRoute,
} as any)
const AppAuthSettingsLayoutRoute = AppAuthSettingsLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => AppAuthSettingsRoute,
} as any)
const AppAuthChatThreadIdRoute = AppAuthChatThreadIdRouteImport.update({
  id: '/chat/$threadId',
  path: '/chat/$threadId',
  getParentRoute: () => AppAuthRoute,
} as any)
const AppAuthSettingsLayoutIndexRoute =
  AppAuthSettingsLayoutIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AppAuthSettingsLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '': typeof AppAuthRouteWithChildren
  '/login': typeof AppLoginRoute
  '/': typeof AppAuthIndexRoute
  '/chat/$threadId': typeof AppAuthChatThreadIdRoute
  '/settings': typeof AppAuthSettingsLayoutRouteWithChildren
  '/settings/': typeof AppAuthSettingsLayoutIndexRoute
}
export interface FileRoutesByTo {
  '': typeof AppRouteWithChildren
  '/login': typeof AppLoginRoute
  '/': typeof AppAuthIndexRoute
  '/chat/$threadId': typeof AppAuthChatThreadIdRoute
  '/settings': typeof AppAuthSettingsLayoutIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteWithChildren
  '/_app/_auth': typeof AppAuthRouteWithChildren
  '/_app/login': typeof AppLoginRoute
  '/_app/_auth/': typeof AppAuthIndexRoute
  '/_app/_auth/chat/$threadId': typeof AppAuthChatThreadIdRoute
  '/_app/_auth/settings': typeof AppAuthSettingsRouteWithChildren
  '/_app/_auth/settings/_layout': typeof AppAuthSettingsLayoutRouteWithChildren
  '/_app/_auth/settings/_layout/': typeof AppAuthSettingsLayoutIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/'
    | '/chat/$threadId'
    | '/settings'
    | '/settings/'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/login' | '/' | '/chat/$threadId' | '/settings'
  id:
    | '__root__'
    | '/_app'
    | '/_app/_auth'
    | '/_app/login'
    | '/_app/_auth/'
    | '/_app/_auth/chat/$threadId'
    | '/_app/_auth/settings'
    | '/_app/_auth/settings/_layout'
    | '/_app/_auth/settings/_layout/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/login': {
      id: '/_app/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AppLoginRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/_auth': {
      id: '/_app/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppAuthRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/_auth/settings': {
      id: '/_app/_auth/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppAuthSettingsRouteImport
      parentRoute: typeof AppAuthRoute
    }
    '/_app/_auth/': {
      id: '/_app/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppAuthIndexRouteImport
      parentRoute: typeof AppAuthRoute
    }
    '/_app/_auth/settings/_layout': {
      id: '/_app/_auth/settings/_layout'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppAuthSettingsLayoutRouteImport
      parentRoute: typeof AppAuthSettingsRoute
    }
    '/_app/_auth/chat/$threadId': {
      id: '/_app/_auth/chat/$threadId'
      path: '/chat/$threadId'
      fullPath: '/chat/$threadId'
      preLoaderRoute: typeof AppAuthChatThreadIdRouteImport
      parentRoute: typeof AppAuthRoute
    }
    '/_app/_auth/settings/_layout/': {
      id: '/_app/_auth/settings/_layout/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AppAuthSettingsLayoutIndexRouteImport
      parentRoute: typeof AppAuthSettingsLayoutRoute
    }
  }
}

interface AppAuthSettingsLayoutRouteChildren {
  AppAuthSettingsLayoutIndexRoute: typeof AppAuthSettingsLayoutIndexRoute
}

const AppAuthSettingsLayoutRouteChildren: AppAuthSettingsLayoutRouteChildren = {
  AppAuthSettingsLayoutIndexRoute: AppAuthSettingsLayoutIndexRoute,
}

const AppAuthSettingsLayoutRouteWithChildren =
  AppAuthSettingsLayoutRoute._addFileChildren(
    AppAuthSettingsLayoutRouteChildren,
  )

interface AppAuthSettingsRouteChildren {
  AppAuthSettingsLayoutRoute: typeof AppAuthSettingsLayoutRouteWithChildren
}

const AppAuthSettingsRouteChildren: AppAuthSettingsRouteChildren = {
  AppAuthSettingsLayoutRoute: AppAuthSettingsLayoutRouteWithChildren,
}

const AppAuthSettingsRouteWithChildren = AppAuthSettingsRoute._addFileChildren(
  AppAuthSettingsRouteChildren,
)

interface AppAuthRouteChildren {
  AppAuthIndexRoute: typeof AppAuthIndexRoute
  AppAuthChatThreadIdRoute: typeof AppAuthChatThreadIdRoute
  AppAuthSettingsRoute: typeof AppAuthSettingsRouteWithChildren
}

const AppAuthRouteChildren: AppAuthRouteChildren = {
  AppAuthIndexRoute: AppAuthIndexRoute,
  AppAuthChatThreadIdRoute: AppAuthChatThreadIdRoute,
  AppAuthSettingsRoute: AppAuthSettingsRouteWithChildren,
}

const AppAuthRouteWithChildren =
  AppAuthRoute._addFileChildren(AppAuthRouteChildren)

interface AppRouteChildren {
  AppAuthRoute: typeof AppAuthRouteWithChildren
  AppLoginRoute: typeof AppLoginRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppAuthRoute: AppAuthRouteWithChildren,
  AppLoginRoute: AppLoginRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
